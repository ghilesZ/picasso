(* this module handles the svg generation *)

type internal = string (* output file *)

let output = ref None

let set_output out =
  let oc = open_out out in
  let fmt = Format.formatter_of_out_channel oc in
  at_exit (fun () -> close_out oc);
  output := Some fmt

let get_output () =
  try Option.get !output
  with Invalid_argument _ ->
    failwith "svg output should be set before svg generation"

let emit s = Format.fprintf (get_output ()) s

let name r g b =
  if r = g && g = b then
    if r = 0 then "black"
    else if r = 255 then "white"
    else Format.asprintf "rgb(%i,%i,%i)" r g b
  else
  Format.asprintf "rgb(%i,%i,%i)" r g b

let msg () =
  emit "<!-- This file was generated by the Picasso library -->\n"

let header () =
  emit "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n";
  emit "<svg>\n"

let footer () = emit "</svg>\n%!"

let init f =
  set_output f;
  header ();
  msg ()

let ending () = footer ()

let width () = 250
let height () = 250

let normalize (x_min, x_max) (y_min, y_max) (x, y) =
  let x = Tools.projection (x_min,x_max) (0.,float (width())) x in
  let y = Tools.projection (y_min,y_max) (0.,float (height())) y in
  x, (float (height())) -. y

type color = int * int * int
let rgb r g b : color = (r,g,b)

let draw_text (r,g,b) _p (x,y) text =
  let text = String.escaped text in
  let c = name r g b in
  emit "<text x=\"%f\" y=\"%f\" fill=\"%s\">%s</text>\n" x y c text

let draw_line (r,g,b) (x1,y1) (x2,y2) =
  let c = name r g b in
  emit "<line x1=\"%f\" y1=\"%f\" x2=\"%f\" y2=\"%f\" stroke=\"%s\" />\n" x1 y1 x2 y2 c

let circle fill (r,g,b) (x,y) rad =
  let c = name r g b in
  emit "<circle cx=\"%f\" cy=\"%f\" r=\"%f\"" x y rad;
  emit " %s=\"%s\" />\n%!" (if fill then "fill" else "stroke") c

let fill_circle = circle true

let draw_circle = circle false

let poly fill (r,g,b) vertices =
  let c = name r g b in
  emit "<polygon points=\"";
	List.iter (fun (x,y) -> emit "%f,%f " x y) vertices;
  emit "\" %s=\"%s\" />\n%!" (if fill then "fill" else "stroke") c

let fill_poly = poly true

let draw_poly = poly false
